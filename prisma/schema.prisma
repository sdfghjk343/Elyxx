// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String    @id @default(cuid())
  name                   String?
  email                  String    @unique
  password               String
  emailVerified          DateTime?
  image                  String?
  role                   String    @default("user") // "user" o "admin"
  verificationToken      String?
  verificationTokenExpiry DateTime?
  resetPasswordToken     String?
  resetPasswordTokenExpiry DateTime?
  stripeCustomerId       String?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt

  subscription           Subscription?
  messages               Message[]
  images                 Image[]
  files                  File[]
}

model Subscription {
  id                  String    @id @default(cuid())
  userId              String    @unique
  planId              String    @default("FREE") // "FREE", "PRO", "BUSINESS"
  status              String    @default("pending") // "pending", "active", "canceled"
  billingCycle        String?   // "monthly", "annually"
  stripeSubscriptionId String?
  currentPeriodEnd    DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  user                User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Message {
  id        String   @id @default(cuid())
  userId    String
  content   String   @db.Text
  role      String   // "user" o "assistant"
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Image {
  id        String   @id @default(cuid())
  userId    String
  prompt    String   @db.Text
  url       String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model File {
  id        String   @id @default(cuid())
  userId    String
  name      String
  type      String
  size      Int
  url       String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

